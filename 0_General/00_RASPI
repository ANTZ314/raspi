----------------------------------------
Disk Space, Memory Use, and CPU Load:
----------------------------------------
Disk Usage:
-> du 	  -h 	-> human readable
		  -s	-> summary

Disk Free:
-> df

Memory Summary:
-> free
-> free -m

List all installed packages:
-> dpkg --get-selections | less
-> 'q' to exit

============================================
============================================
SSH Control of the console:
============================================
============================================
Download/update on both systems:
$ sudo apt-get install ssh

Check both Wifi's are on.

Check BOTH IP Addresses:
$ ifconfig
-> wlan? (via wifi)

From host PC side:
$ ssh pi@192.168...
-> password: romans

============================================
FILE TRANSFER: 
============================================

Copy (SCP) files to the RPi:
-> scp file.ext pi@192.168.x.xxx:/home/pi/


Copy (SCP) files from the RPi:
-> scp pi@192.168.x.xxx:/home/pi/file.ext /home/antz/path

Copy multiple files from local to remote:
-> scp myfile.txt myfile2.txt pi@192.168.x.xxx:/remote/folder/

Copy all files from local to remote:
$ scp * remoteuser@remoteserver:/remote/folder/

Copy all files and folders recursively from local to remote:
$ scp -r * remoteuser@remoteserver:/remote/folder/

Copy folder and its contents to RPi:
$ scp -r ~/path/folder pi@19.168.1.101:/home/pi/

--------------------------------------------
Exit ssh & to return to normal terminal:
$ exit


============================================
Basic Commands
============================================
space in file name - use '\ '
date        - see date and time
cal         - view calendar
df          - view free disk space
pwd         - Print name of current working directory
cd          - Change directory
cd ..       - Goto parent folder
cd ./xx     - Goto child folder
ls          - List directory contents
cp          - Copy files and directories
mv          - Move/rename files and directories
mkdir       - Create directories
rm          - Remove files and directories
ln          - Create hard and symbolic links

Open any file in its Default App:
xdg-open <file_name>

Remove a file:
rm -rf filepath/filename

copy multiple items into a directory:
cp item... directory


copy single file/directory (item1) to file/directory (item2):
cp item1 item2

Wildcards [pg46]:
*   - All Files
g*  - Any file beginning with 'g'
b* .txt - Any file beginning with 'b' & ending with '.txt'
[abc]*  - Any file starting with 'a', 'b' or 'c'

Hardlinks
Symbolic Links
---------------------------
command -options arguments
---------------------------
-a  --all       * List all files (even hidden)
-d  --directory * Use this option in conjunction                  with the -l option to see details                   about the directory rather than its                 contents.
-F  --classify  * This option will append an indicator 
              character to the end of each listed name.
-h  --human-readable * In long format listings, display file 
               sizes in human readable format rather 
               than in bytes
-l  --      * Display results in long format
-r  --reverse   * Display the results in reverse order.
-S  --      * Sort results by file size.
-t  --      * Sort by modification time
-i  --interactive   * Prompt the user to overwrite files
-u  --update    * only files that are new or don't exist
-v  --verbose   * Display info messages during move



------------------------------------------------------
To install some file *.tar.gz, you basically would do:
------------------------------------------------------
    Open a console, and go to the directory where the file is

    Type: tar -zxvf file.tar.gz

    Read the file INSTALL and/or README to know if you need some dependencies.

Most of the times you only need to:

    type ./configure

    make

    sudo make install

------------------------------------------------------
To install some file *.tar.gz, you basically would do:
------------------------------------------------------
    Open a console, and go to the directory where the file is

    Type: tar -zxv file.tar.gz

    Read the file INSTALL and/or README to know if you need some dependencies.

Most of the times you only need to:

    type ./configure

    make

    sudo make install

--------------------------------------------
----------------------------------------
Clone Disk from SD to backup:
----------------------------------------
-> List all drives & find:
sudo fdisk -l

-> Create the Clone:
sudo dd if=/dev/mmcblk0 of=~/Desktop/sd_backup.img
-OR-
sudo dd if=/dev/mmcblk0 bs=4M of=~/Desktop/sd_backup.img
-OR-
sudo apt-get install gddrescue
sudo ddrescue /dev/mmcblk0 ~/Desktop/sd_backup.img

----------------------------------------
Write cloned disk image to SD:
----------------------------------------
-> First Make sure that the SD cardâ€™s partitions are unmounted:

-> List all drives & find:
sudo fdisk -l

-> List mounted drives:
sudo mount | grep sdb           (replace sdb with drive name)

-> unmount the listed ones:
sudo umount /dev/sdb1 /dev/sdb2 /dev/sdb3

-> Use 'dd' to write the image:
sudo dd if=~/raspbian_backup.img of=/dev/sdb


----------------------------------------
Basic cross compile:
----------------------------------------
From RasPi side, copy compiled file from host:
$ scp antz@192.168.8.103:pidev/test/hello .

Run the compiled file:
$ ./hello

--------------------------------------------
Create & run C file from Treminal:
--------------------------------------------
create c file:
    gedit path/folder/file.c

Compile and create object file:
    gcc -o file file.c

Execute (object name):
    ./file

--------------------------------------------
'less' is a Text Viewer:
open -> less filename	
* "q" to exit
* Up/"b" to scroll back a page
* Down/'space' to scroll forward
* Up Arrow to scroll up one line [more on pg 40]


------------------------------------------------------
To display an image:
------------------------------------------------------
-> sudo apt install fim
-> fim -a pic.jpg

Multiple images:
-> fim -a *.jpg

PageUp/Down      Prev/Next image
+/-              Zoom in/out
a                Autoscale
w                Fit to width
h                Fit to height
j/k              Pan down/up
f/m              flip/mirror
R/r              Rotate 10 degrees CW/CCW
ESC/q            Quit


============================================
Setting Time Date:
============================================

sudo dpkg-reconfigure tzdata # Select timezone

-OR-

sudo timedatectl set-time 'yyyy-mm-dd hh-mm'

-OR-

-> Manually set the time to be somewhat accurate:
sudo date -s "mm/dd/yyyy 11:00"

-OR-

-> Manually force time update:
sudo systemctl stop ntp.service
sudo ntpd -gqc /etc/ntpd.conf
sudo systemctl start ntp.service

-OR-

sudo raspi-config -> locale settings -> select timezone

============================================
Corrupt USB / SD Card:
============================================
List the connected devices
$ sudo parted -l

Write all zeros till the end:
$ sudo dd if=/dev/zero of=/dev/sdb bs=4M			<-- USB
$ sudo dd if=/dev/zero of=/dev/sdb bs=4096 count=1	<-- SD card 

--------------------------------------------
Default video player:
-> omxplayer filename.h264

============================================
AUDIO SETTING (+OMXPlayer):
============================================
To get sound out the headphone jack type:
-> sudo modprobe snd_bcm2835
-> sudo amixer cset numid=3 1

To get sound out the HDMI
-> sudo modprobe snd_bcm2835
-> sudo amixer cset numid=3 0

Trouble with omxplayer

set the -o output for 3.5 audio jack
-> omxplayer -o local

set the -o output for hdmi
-> omxplayer -o hdmi 