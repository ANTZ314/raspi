


Step 1:
-> sudo apt-get install build-essential cmake pkg-config

Step 2:
-> sudo apt-get install libjpeg8-dev libtiff4-dev libjasper-dev libpng12-dev

Step 3:
-> sudo apt-get install libgtk2.0-dev

Step 4:
-> sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev

Step 5:
-> sudo apt-get install libatlas-base-dev gfortran

Step 6:
-> wget https://bootstrap.pypa.io/get-pip.py --no-check-certificate
-> sudo python get-pip.py

Step 7:
-> sudo pip install virtualenv virtualenvwrapper
-> sudo rm -rf ~/.cache/pip

Then, update your ~/.profile  file to include the following lines:
-> sudo nano .profile (make changes below and save)
# virtualenv and virtualenvwrapper
export WORKON_HOME=$HOME/.virtualenvs
source /usr/local/bin/virtualenvwrapper.sh

Reload your .profile  file:
-> source ~/.profile
-> mkvirtualenv cv

Step 8: [Using Python2.7]
-> sudo apt-get install python2.7-dev
-> pip install numpy

Step 9:
-> wget -O opencv-2.4.10.zip http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.4.10/opencv-2.4.10.zip/download
-> unzip opencv-2.4.10.zip
-> cd opencv-2.4.10

-> mkdir build
-> cd build
-> cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_NEW_PYTHON_SUPPORT=ON -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=ON  -D BUILD_EXAMPLES=ON ..
-> make

(2.5 hours)

===================================> CONTINUE... (in workon cv)

Finally, we can install OpenCV:
-> sudo make install
-> sudo ldconfig

Step 10:
OpenCV should now be installed in  /usr/local/lib/python2.7/site-packages
To utilize OpenCV within our cv  virtual environment, we first need to sym-link OpenCV into our site-packages  directory:
-> cd ~/.virtualenvs/cv/lib/python2.7/site-packages/
-> ln -s /usr/local/lib/python2.7/site-packages/cv2.so cv2.so
-> ln -s /usr/local/lib/python2.7/site-packages/cv.py cv.py

Step 11:
Finally, we can give our OpenCV and Python installation a test drive:
-> workon cv
-> python
>>> import cv2
>>> cv2.__version__
'2.4.10'

>>> exit()

--------
NOTES:
--------
In 'make' was error with "ffmpeg" so add:
-> WITH_NO=FFMPEG

If exitted and want to continue in virtual enviroment:
-> source ~/.profile
-> mkvirtualenv cv



